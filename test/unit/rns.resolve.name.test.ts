import RNSRegistryData from '@rsksmart/rns-registry/RNSRegistryData.json';
import NameResolverData from '@rsksmart/rns-reverse/NameResolverData.json';
import ReverseRegistrarData from '@rsksmart/rns-reverse/ReverseRegistrarData.json';
import AddrResolverData from '@rsksmart/rns-resolver/AddrResolverData.json';
import {
  contract, web3, defaultSender, accounts,
} from '@openzeppelin/test-environment';
import { hash as namehash } from 'eth-ens-namehash';
import Web3 from 'web3';
import { NO_REVERSE_RESOLUTION_SET, NO_NAME_RESOLUTION } from '../../src/errors';
import { asyncExpectThrowError } from '../utils';
import RNS from '../../src/index';
import { Options } from '../../src/types';

describe('name resolution', () => {
  let registry: any;
  let nameResolver: any;
  let reverseRegistrar: any;
  let rns: RNS;
  let options: Options;

  const web3Instance = web3 as unknown as Web3;

  beforeEach(async () => {
    const Registry = contract.fromABI(RNSRegistryData.abi, RNSRegistryData.bytecode);
    const NameResolver = contract.fromABI(NameResolverData.abi, '0x608060405234801561001057600080fd5b506040516106853803806106858339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506105f1806100946000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063691f3431146100ab5780637737221314610152575b600080fd5b6100916004803603602081101561005c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506101d5565b604051808215151515815260200191505060405180910390f35b6100d7600480360360208110156100c157600080fd5b8101908080359060200190929190505050610236565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101175780820151818401526020810190506100fc565b50505050905090810190601f1680156101445780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d36004803603604081101561016857600080fd5b81019080803590602001909291908035906020019064010000000081111561018f57600080fd5b8201836020820111156101a157600080fd5b803590602001918460018302840111640100000000831117156101c357600080fd5b90919293919293905050506102eb565b005b600063691f343160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061022f575061022e826104c6565b5b9050919050565b6060600160008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b50505050509050919050565b826000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561035e57600080fd5b505afa158015610372573d6000803e3d6000fd5b505050506040513d602081101561038857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f4f6e6c79206f776e65720000000000000000000000000000000000000000000081525060200191505060405180910390fd5b828260016000878152602001908152602001600020919061045b929190610517565b50837fb7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f7848460405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a250505050565b60006301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061055857803560ff1916838001178555610586565b82800160010185558215610586579182015b8281111561058557823582559160200191906001019061056a565b5b5090506105939190610597565b5090565b6105b991905b808211156105b557600081600090555060010161059d565b5090565b9056fea265627a7a723158204179395d281b6a74f984ecbe98196016a971d59371530aaca0c51bdbe16b625764736f6c63430005100032');
    const ReverseRegistrar = contract.fromABI(ReverseRegistrarData.abi, '0x608060405234801561001057600080fd5b50604051611b91380380611b918339818101604052602081101561003357600080fd5b810190808051906020019092919050505061005261015460201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061015c565b600033905090565b611a268061016b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637cf8a2eb1161008c578063a8fe64be11610066578063a8fe64be146103d6578063bffbe61c1461041a578063c47f002714610472578063f2fde38b146104ff576100ea565b80637cf8a2eb1461034c5780638da5cb5b1461036a5780638f32d59b146103b4576100ea565b80632638e256116100c85780632638e2561461021b5780634f347ec7146102b4578063663b44c5146102f8578063715018a614610342576100ea565b80630f5a5466146100ef5780631e524f16146101675780631e83409a146101c3575b600080fd5b6101516004803603604081101561010557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610543565b6040518082815260200191505060405180910390f35b6101a96004803603602081101561017d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a6e565b604051808215151515815260200191505060405180910390f35b610205600480360360208110156101d957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a8b565b6040518082815260200191505060405180910390f35b6102b26004803603604081101561023157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561026e57600080fd5b82018360208201111561028057600080fd5b803590602001918460018302840111640100000000831117156102a257600080fd5b9091929391929390505050610bdf565b005b6102f6600480360360208110156102ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fe5565b005b610300611076565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034a61109c565b005b6103546111d5565b6040518082815260200191505060405180910390f35b6103726111fc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103bc611225565b604051808215151515815260200191505060405180910390f35b610418600480360360208110156103ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611283565b005b61045c6004803603602081101561043057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611314565b6040518082815260200191505060405180910390f35b6104e96004803603602081101561048857600080fd5b81019080803590602001906401000000008111156104a557600080fd5b8201836020820111156104b757600080fd5b803590602001918460018302840111640100000000831117156104d957600080fd5b9091929391929390505050611377565b6040518082815260200191505060405180910390f35b6105416004803603602081101561051557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114d6565b005b60008061054f3361155c565b90507f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b8160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012091503073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561062f57600080fd5b505afa158015610643573d6000803e3d6000fd5b505050506040513d602081101561065957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161461077257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83306040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b15801561075957600080fd5b505af115801561076d573d6000803e3d6000fd5b505050505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156108ab5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf7f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561084057600080fd5b505afa158015610854573d6000803e3d6000fd5b505050506040513d602081101561086a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561097257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631896f70a83856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561095957600080fd5b505af115801561096d573d6000803e3d6000fd5b505050505b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610a6757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635b0fc9c383866040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610a4e57600080fd5b505af1158015610a62573d6000803e3d6000fd5b505050505b5092915050565b6000610a848260026115c690919063ffffffff16565b9050919050565b600080610a973361155c565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83866040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610b6d57600080fd5b505af1158015610b81573d6000803e3d6000fd5b505050507f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b81604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120915050919050565b610be833610a6e565b610c5a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f742072736b207265676973747261722e000000000000000000000000000081525060200191505060405180910390fd5b6000610c658461155c565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b83306040518463ffffffff1660e01b8152600401808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015610d3b57600080fd5b505af1158015610d4f573d6000803e3d6000fd5b5050505060007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b826040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610e1c57600080fd5b505afa158015610e30573d6000803e3d6000fd5b505050506040513d6020811015610e4657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663773722138286866040518060400160405280600481526020017f2e72736b00000000000000000000000000000000000000000000000000000000815250604051602001808484808284378083019250505082805190602001908083835b60208310610eee5780518252602082019150602081019050602083039250610ecb565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610f79578082015181840152602081019050610f5e565b50505050905090810190601f168015610fa65780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b158015610fc657600080fd5b505af1158015610fda573d6000803e3d6000fd5b505050505050505050565b610fed611225565b61105f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6110738160026116a490919063ffffffff16565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110a4611225565b611116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b81565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661126761177f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61128b611225565b6112fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61131181600261178790919063ffffffff16565b50565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b6113438361155c565b6040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600061138230610a8b565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156113f757600080fd5b505afa15801561140b573d6000803e3d6000fd5b505050506040513d602081101561142157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663773722138285856040518463ffffffff1660e01b815260040180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050945050505050600060405180830381600087803b1580156114b857600080fd5b505af11580156114cc573d6000803e3d6000fd5b5050505092915050565b6114de611225565b611550576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61155981611844565b50565b60007f303132333435363738396162636465660000000000000000000000000000000060285b60008111156115b85760018103905081600f85161a815360108404935060018103905081600f85161a8153601084049350611582565b506028600020915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561164d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806119d06022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116ae82826115c6565b15611721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600033905090565b61179182826115c6565b6117e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806119af6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119896026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72315820af2ecb867a3f1a34ca0255ea69ea4177bd35022889377020aad918a6b0465fc964736f6c63430005100032');

    registry = await Registry.new();
    nameResolver = await NameResolver.new(registry.address);
    reverseRegistrar = await ReverseRegistrar.new(registry.address);

    await registry.setSubnodeOwner('0x00', web3.utils.sha3('reverse'), defaultSender);
    await registry.setResolver(namehash('reverse'), nameResolver.address);
    await registry.setSubnodeOwner(namehash('reverse'), web3.utils.sha3('addr'), reverseRegistrar.address);

    options = {
      contractAddresses: {
        registry: registry.address,
      },
    };

    rns = new RNS(web3Instance, options);
  });

  it('should resolve an address', async () => {
    const [alice] = accounts;

    const expected = 'alice.rsk';
    await reverseRegistrar.setName(expected, { from: alice });
    const actual = await rns.reverse(alice);
    expect(actual).toBe(expected);
  });

  it('should throw an error when invalid ERC165 contract (account address) as reverse resolver', async () => {
    const [alice, accountAsResolver] = accounts;

    await reverseRegistrar.claimWithResolver(alice, accountAsResolver, { from: alice });
    await asyncExpectThrowError(async () => rns.reverse(alice), NO_NAME_RESOLUTION);
  });

  it('should throw an error when ERC165 that not support name interface (public resolver) as reverse resolver', async () => {
    const [alice] = accounts;
    const PublicResolver = contract.fromABI(AddrResolverData.abi, AddrResolverData.bytecode);
    const publicResolver = await PublicResolver.new(registry.address);

    await reverseRegistrar.claimWithResolver(alice, publicResolver.address, { from: alice });
    await asyncExpectThrowError(async () => rns.reverse(alice), NO_NAME_RESOLUTION);
  });

  it('should throw an error when the address has a resolver but no resolution set', async () => {
    const [alice] = accounts;

    await reverseRegistrar.claim(alice, { from: alice });
    await asyncExpectThrowError(async () => rns.reverse(alice), NO_REVERSE_RESOLUTION_SET);
  });

  it('should throw an error when reverse resolution has not been set', async () => {
    await asyncExpectThrowError(async () => rns.reverse('0x0000000000000000000000000000000000000001'), NO_REVERSE_RESOLUTION_SET);
  });
});
